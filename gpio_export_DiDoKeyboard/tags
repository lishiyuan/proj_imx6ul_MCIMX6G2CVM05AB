!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
APP	Makefile	/^APP := app_do_test                         #最终app$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
COMMON_H	common.h	9;"	d
CROSS_COMPILE	Makefile	/^CROSS_COMPILE = arm-linux-gnueabihf-$/;"	m
DEBUG	common.h	27;"	d
DEBUG_INFO	common.h	30;"	d
DEBUG_INFO	common.h	32;"	d
DIDO_H	dido.h	9;"	d
DIDO_Init	dido.c	/^static void DIDO_Init(char *direction)$/;"	f	file:
DI_Enable	dido.c	/^int DI_Enable(int channel)$/;"	f
DI_Test	test.c	/^int DI_Test(int argc, char *argv[])$/;"	f
DO_CHANNEL_GPIO_NUM_MAX	dido.c	14;"	d	file:
DO_CHANNEL_GPIO_NUM_MIN	dido.c	13;"	d	file:
DO_CHANNEL_NUM_MAX	dido.c	16;"	d	file:
DO_CHANNEL_NUM_MIN	dido.c	15;"	d	file:
DO_Enable	dido.c	/^int DO_Enable(int channel, int level)$/;"	f
DO_Test	test.c	/^int DO_Test(int argc, char *argv[])$/;"	f
ENABLE_GPIO1_IO00_U4A_74LVC139D_PIN_1E	keyboard.c	38;"	d	file:
ENABLE_GPIO1_IO01_U4A_74LVC139D_PIN_1A1	keyboard.c	39;"	d	file:
ENABLE_GPIO1_IO02_U18_74HCT541_PIN_OE2	keyboard.c	40;"	d	file:
ENABLE_GPIO1_IO03_U16_74HCT541_PIN_OE2	keyboard.c	41;"	d	file:
GPIO_CREATE_DEV_NODE_CMD_LEN	gpio.h	23;"	d
GPIO_CreateNode	gpio.c	/^void GPIO_CreateNode(int gpioNum)$/;"	f
GPIO_DEV_PATH_LEN_MAX	gpio.h	22;"	d
GPIO_DIRECTION_INPUT	gpio.h	31;"	d
GPIO_DIRECTION_OUTPUT	gpio.h	30;"	d
GPIO_GetLevel	gpio.c	/^int GPIO_GetLevel(int gpioNum)$/;"	f
GPIO_H	gpio.h	9;"	d
GPIO_LEVEL_HIGH	gpio.h	36;"	d
GPIO_LEVEL_LOW	gpio.h	37;"	d
GPIO_LEVEL_PATH_LEN	gpio.h	24;"	d
GPIO_LEVEL_STR_LEN	gpio.h	25;"	d
GPIO_PIN_NUM_MAX	gpio.h	16;"	d
GPIO_PIN_NUM_MIN	gpio.h	17;"	d
GPIO_SetDirection	gpio.c	/^int GPIO_SetDirection(int gpioNum, char *direction)$/;"	f
GPIO_SetLevel	gpio.c	/^void GPIO_SetLevel(int gpioNum, int level)$/;"	f
GetPressKey	keyboard.c	/^static void GetPressKey(KeyBoard *keyBoard)$/;"	f	file:
IsFileExist	common.c	/^int IsFileExist(const char* path)$/;"	f
KEYBOARD_H	keyboard.h	9;"	d
KEY_INPUT_MODE_PIN1_NUM	keyboard.c	27;"	d	file:
KEY_INPUT_MODE_PIN2_NUM	keyboard.c	28;"	d	file:
KEY_INPUT_MODE_PIN3_NUM	keyboard.c	29;"	d	file:
KEY_INPUT_MODE_PIN4_NUM	keyboard.c	30;"	d	file:
KEY_INPUT_MODE_PIN5_NUM	keyboard.c	31;"	d	file:
KEY_INPUT_MODE_PIN7_NUM	keyboard.c	32;"	d	file:
KEY_INPUT_MODE_PIN8_NUM	keyboard.c	33;"	d	file:
KEY_INPUT_PIN_NUMS	keyboard.c	26;"	d	file:
KEY_OUTPUT_MODE_PIN1_NUM	keyboard.c	18;"	d	file:
KEY_OUTPUT_MODE_PIN2_NUM	keyboard.c	19;"	d	file:
KEY_OUTPUT_MODE_PIN3_NUM	keyboard.c	20;"	d	file:
KEY_OUTPUT_MODE_PIN4_NUM	keyboard.c	21;"	d	file:
KEY_OUTPUT_PIN_NUMS	keyboard.c	17;"	d	file:
KeyBoard	keyboard.h	/^} KeyBoard;$/;"	t	typeref:struct:__anon1
KeyboardTest	test.c	/^void KeyboardTest(void)$/;"	f
OBJ	Makefile	/^OBJ := $(patsubst %.c,%.o,$(SRC))          #变量OBJ用于存放：所有.c文件名后缀更改为.o$/;"	m
OKIMX6UL_KeyBoardDisable	keyboard.c	/^void OKIMX6UL_KeyBoardDisable(KeyBoard *keyBoard)$/;"	f
OKIMX6UL_KeyBoardEnable	keyboard.c	/^void OKIMX6UL_KeyBoardEnable(KeyBoard *keyBoard)$/;"	f
SRC	Makefile	/^SRC := $(wildcard *.c)                     #变量SRC用于存放：遍历目录下所有的.c文件$/;"	m
SetKeyBoardFlag	keyboard.c	/^static void SetKeyBoardFlag(KeyBoard *keyBoard, int gpioScanRow, int gpioScanCol)$/;"	f	file:
TEST_H	test.h	9;"	d
VERSION	Makefile	/^VERSION = 1.0.0$/;"	m
VOS_ERROR	common.h	21;"	d
VOS_FALSE	common.h	17;"	d
VOS_NOK	common.h	20;"	d
VOS_OK	common.h	19;"	d
VOS_TRUE	common.h	16;"	d
dot	keyboard.h	/^    char dot;   \/* GPIO2_19(51)  +  GPIO2_15(47) *\/$/;"	m	struct:__anon1
down	keyboard.h	/^    char down;  \/* GPIO2_17(49)  +  GPIO2_11(43) *\/$/;"	m	struct:__anon1
enter	keyboard.h	/^    char enter; \/* GPIO2_19(51)  +  GPIO2_10(42) *\/$/;"	m	struct:__anon1
f1	keyboard.h	/^    char f1;    \/* GPIO2_16(48)  +  GPIO2_10(42) *\/$/;"	m	struct:__anon1
f2	keyboard.h	/^    char f2;    \/* GPIO2_17(49)  +  GPIO2_10(42) *\/$/;"	m	struct:__anon1
fi	keyboard.h	/^    char fi;    \/* GPIO2_19(51)  +  GPIO2_08(40) *\/$/;"	m	struct:__anon1
fo	keyboard.h	/^    char fo;    \/* GPIO2_17(49)  +  GPIO2_08(40) *\/$/;"	m	struct:__anon1
fx	keyboard.h	/^    char fx;    \/* GPIO2_16(48)  +  GPIO2_08(40) *\/$/;"	m	struct:__anon1
left	keyboard.h	/^    char left;  \/* GPIO2_16(48)  +  GPIO2_11(43) *\/$/;"	m	struct:__anon1
m	keyboard.h	/^    char m;     \/* GPIO2_16(48)  +  GPIO2_15(47) *\/$/;"	m	struct:__anon1
main	main.c	/^int main(int argc, char *argv[])$/;"	f
num0	keyboard.h	/^    char num0;  \/* GPIO2_17(49)  +  GPIO2_15(47) *\/$/;"	m	struct:__anon1
num1	keyboard.h	/^    char num1;  \/* GPIO2_16(48)  +  GPIO2_14(46) *\/$/;"	m	struct:__anon1
num2	keyboard.h	/^    char num2;  \/* GPIO2_17(49)  +  GPIO2_14(46) *\/$/;"	m	struct:__anon1
num3	keyboard.h	/^    char num3;  \/* GPIO2_19(51)  +  GPIO2_14(46) *\/$/;"	m	struct:__anon1
num4	keyboard.h	/^    char num4;  \/* GPIO2_16(48)  +  GPIO2_13(45) *\/$/;"	m	struct:__anon1
num5	keyboard.h	/^    char num5;  \/* GPIO2_17(49)  +  GPIO2_13(45) *\/$/;"	m	struct:__anon1
num6	keyboard.h	/^    char num6;  \/* GPIO2_19(51)  +  GPIO2_13(45) *\/$/;"	m	struct:__anon1
num7	keyboard.h	/^    char num7;  \/* GPIO2_16(48)  +  GPIO2_09(41) *\/$/;"	m	struct:__anon1
num8	keyboard.h	/^    char num8;  \/* GPIO2_17(49)  +  GPIO2_09(41) *\/$/;"	m	struct:__anon1
num9	keyboard.h	/^    char num9;  \/* GPIO2_19(51)  +  GPIO2_09(41) *\/$/;"	m	struct:__anon1
right	keyboard.h	/^    char right; \/* GPIO2_17(49)  +  GPIO2_12(44) *\/$/;"	m	struct:__anon1
up	keyboard.h	/^    char up;    \/* GPIO2_16(48)  +  GPIO2_12(44) *\/$/;"	m	struct:__anon1
